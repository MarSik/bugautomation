// TODO this should probably be moved to file based rule file

import org.marsik.bugautomation.facts.BugzillaBug;
import org.marsik.bugautomation.facts.BugzillaPriorityLevel;
import org.marsik.bugautomation.facts.BugzillaStatus;
import org.marsik.bugautomation.facts.TrelloBoard;
import org.marsik.bugautomation.facts.TrelloCard;
import org.marsik.bugautomation.facts.TrelloLabel;
import org.marsik.bugautomation.facts.Bug;
import org.marsik.bugautomation.facts.User;
import org.marsik.bugautomation.facts.BugzillaBugFlag;
import org.marsik.bugautomation.services.ConfigurationService;

// Mark all ZStream cards with insufficient flags
rule "missingZStreamFlags"
  when
    $bz: BugzillaBug($bug : bug, $flags: flags, community == "redhat",
      targetMilestone str[startsWith] "ovirt-3." ||
      targetMilestone str[startsWith] "ovirt-4.0." ||
      targetMilestone str[startsWith] "ovirt-4.1." ||
      targetMilestone str[startsWith] "ovirt-4.2.")
    not(exists BugzillaBugFlag(approves($bz.getTargetMilestone())) from $flags)

    $board: TrelloBoard(config.isBoardMonitored(id))
    $card: TrelloCard(bug == $bug, board == $board, $labels: labels)
    not(exists TrelloLabel(name == "flags missing") from $labels)
  then
    trello.assignLabelToCard($card, "flags missing");
end

// Remove missing flags label when the bug is not targeted to ZStream
rule "zStreamFlagsNotNeededRelease"
  when
    $bz: BugzillaBug($bug : bug,
      targetMilestone not str[startsWith] "ovirt-3.",
      targetMilestone not str[startsWith] "ovirt-4.0.",
      targetMilestone not str[startsWith] "ovirt-4.1.",
      targetMilestone not str[startsWith] "ovirt-4.2.")

    $board: TrelloBoard(config.isBoardMonitored(id))
    $card: TrelloCard(bug == $bug, board == $board, $labels: labels)
    $label: TrelloLabel(name == "flags missing") from $labels
  then
    trello.removeLabelFromCard($card, $label);
end

rule "zStreamFlagsNotNeededCommunity"
  when
    $bz: BugzillaBug($bug : bug, community != "redhat")
    $board: TrelloBoard(config.isBoardMonitored(id))
    $card: TrelloCard(bug == $bug, board == $board, $labels: labels)
    $label: TrelloLabel(name == "flags missing") from $labels
  then
    trello.removeLabelFromCard($card, $label);
end
